{"version":3,"sources":["components/navbar.js","components/navigationList.js","components/grid.js","gridFolder/img1.js","gridFolder/img2.js","gridFolder/img3.js","gridFolder/we.js","LandingPage.js","IndivPage/NewContainer.js","IndivPage/banner.js","IndivPage/destText.js","IndivPage/Food.js","IndivPage/destinations.js","IndivPage/Iconic.js","loadPages/Kyoto.js","Foodstyles/ListStyle.js","Foodstyles/articleStyle.js","Foodstyles/imgContainer.js","Foodstyles/TextDetail.js","clickRedirect/DataOutput.js","foodData/KyotoFood.js","clickRedirect/FoodList.js","clickRedirect/siteSeeing.js","clickRedirect/IconicDestination.js","loadPages/Osaka.js","foodData/Osakafood.js","clickRedirect/OsakaFood.js","SiteViews/OsakaDest.js","SiteViews/OsakaViews.js","loadPages/Jeju.js","foodData/JejuFood.js","clickRedirect/JejuFood.js","SiteViews/Jejuview.js","SiteViews/JejuDests.js","App.js","serviceWorker.js","index.js"],"names":["styled","nav","Nav","navstyle","color","textDecoration","style","to","section","div","LandingPage","target","src","Kyoto","alt","Food","type","autoPlay","loop","muted","Iconic","article","DataOutput","state","this","props","item","city","img","name","info","TextDetail","Component","KyotoFood","id","Foodlist","FoodData","map","key","views","IconicDestinations","siteData","Osaka","yum","yotheviews","OsakaViews","Yotheviews","Jeju","KoreanDanks","JejuList","Koreanviews","JejuViews","App","className","path","exact","component","FoodList","OsakaList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf6f61f8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport default styled.nav`\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  align-items: center;\r\n  flex: 1 1 40rem;\r\n  font-size: 1.3rem;\r\n  margin: auto;\r\n  padding: 0.7rem;\r\n  flex-wrap: wrap;\r\n  min-height: 5vh;\r\n\r\n  background: linear-gradient(rgba(0, 0, 0, 1), transparent);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-image: url(\"https://images.pexels.com/photos/2187421/pexels-photo-2187421.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\");\r\n\r\n  nav ul {\r\n    min-width: 30vw;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    list-style: none;\r\n    flex: 1 1 40rem;\r\n    text-decoration: none;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import NavBar from \"./navbar\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  const navstyle = {\r\n    color: \"white\",\r\n    textDecoration: \"none\"\r\n  };\r\n  return (\r\n    <NavBar>\r\n      <nav>\r\n        <ul>\r\n          <Link style={navstyle} to=\"/\">\r\n            <li>Home</li>\r\n          </Link>\r\n\r\n          <Link style={navstyle} to=\"/Kyoto\">\r\n            <li>Kyoto</li>\r\n          </Link>\r\n          <Link style={navstyle} to=\"/Osaka\">\r\n            <li>Osaka</li>\r\n          </Link>\r\n          <Link style={navstyle} to=\"/Jeju\">\r\n            <li>Jeju</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </NavBar>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.section`\r\n  min-height: 100vh;\r\n  display: grid;\r\n  text-decoration: none;\r\n  grid-template-columns: repeat(4, 1fr);\r\n\r\n  position: relative;\r\n  color: white;\r\n  background-color: black;\r\n  grid-template-areas:\r\n    \". img1 img2 img3\"\r\n    \"Text img1 img2 img3\"\r\n    \"Text img1 img2 img3\";\r\n\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: img1;\r\n  text-align: center;\r\n\r\n  h1 {\r\n    color: white;\r\n    background: transparent;\r\n    position: absolute;\r\n    text-align: center;\r\n    top: 50%;\r\n    left: 30%;\r\n    list-style: none;\r\n    text-decoration: none;\r\n    z-index: 3;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    position: relative;\r\n    top: 0%;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: img2;\r\n  text-align: center;\r\n\r\n  h1 {\r\n    color: white;\r\n    background: transparent;\r\n    position: absolute;\r\n    text-align: center;\r\n    top: 50%;\r\n    left: 56%;\r\n    list-style: none;\r\n    text-decoration: none;\r\n    z-index: 3;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    position: relative;\r\n    top: 0%;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: img3;\r\n\r\n  text-align: center;\r\n\r\n  h1 {\r\n    color: white;\r\n    background: transparent;\r\n    position: absolute;\r\n    text-align: center;\r\n    top: 50%;\r\n    left: 80%;\r\n    list-style: none;\r\n    text-decoration: none;\r\n    z-index: 3;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    position: relative;\r\n    top: 0%;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: Text;\r\n  text-decoration: none;\r\n  font-size: 1.6rem;\r\n`;\r\n","import React from \"react\";\r\nimport Grid from \"./components/grid\";\r\nimport Img1 from \"./gridFolder/img1\";\r\nimport Img2 from \"./gridFolder/img2\";\r\nimport Img3 from \"./gridFolder/img3\";\r\nimport Caption from \"./gridFolder/we\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <Grid>\r\n      <Caption>\r\n        <h3>\r\n          {\" \"}\r\n          Choose a <br />\r\n          destination\r\n        </h3>\r\n      </Caption>\r\n      <Img1>\r\n        <Link to=\"/Kyoto\" target=\"_blank\">\r\n          <h1>Kyoto | Japan </h1>\r\n          <img src=\"/photos-touse/zen.png\"></img>\r\n        </Link>\r\n      </Img1>\r\n      <Img2>\r\n        <Link to=\"/Osaka\" target=\"_blank\">\r\n          <h1>Osaka | Japan</h1>\r\n          <img src=\"/photos-touse/skyline.png\"></img>\r\n        </Link>\r\n      </Img2>\r\n\r\n      <Img3>\r\n        <Link to=\"/Jeju\" target=\"_blank\">\r\n          <h1>Jeju | South Korea</h1>\r\n          <img src=\"photos-touse/girl.png\"></img>\r\n        </Link>\r\n      </Img3>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.section`\r\n  min-height: 90vh;\r\n  display: grid;\r\n  background-color: black;\r\n  position: relative;\r\n  text-align: center;\r\n\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: 52vh 8vh 45vh;\r\n  grid-template-areas:\r\n    \" Banner Banner Banner\"\r\n    \" gridText gridText gridText \"\r\n    \"Food Destinations Iconic \";\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: Banner;\r\n  text-align: center;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  color: whitesmoke;\r\n  background-color: black;\r\n  grid-area: gridText;\r\n  text-align: center;\r\n  border: none;\r\n\r\n  h2 {\r\n    position: relative;\r\n    top: -2rem;\r\n    vertical-align: top;\r\n  }\r\n\r\n  font-size: 2rem;\r\n  /* background-image: url(\"https://images.pexels.com/photos/2187421/pexels-photo-2187421.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"); */\r\n\r\n  border-top-left-radius: 1.5rem;\r\n  border-top-right-radius: 1.5rem;\r\n  border-bottom-left-radius: 1.5rem;\r\n  border-bottom-right-radius: 1.5rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: Food;\r\n  color: black;\r\n  background-color: pink;\r\n  font-size: 2rem;\r\n  position: relative;\r\n\r\n  h1 {\r\n    color: white;\r\n    background: transparent;\r\n    position: absolute;\r\n    top: 19%;\r\n    left: 40%;\r\n\r\n    list-style: none;\r\n    text-decoration: none;\r\n    z-index: 3;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    position: relative;\r\n    top: 0%;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: Destinations;\r\n  text-align: center;\r\n  color: black;\r\n  background-color: white;\r\n  font-size: 2rem;\r\n\r\n  video {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-top-left-radius: 0.5rem;\r\n    border-top-right-radius: 0.5rem;\r\n  }\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  grid-area: Iconic;\r\n  color: black;\r\n  background-color: pink;\r\n  font-size: 2rem;\r\n  position: relative;\r\n\r\n  h1 {\r\n    color: white;\r\n    background: transparent;\r\n    position: absolute;\r\n    top: 19%;\r\n    left: 20%;\r\n\r\n    list-style: none;\r\n    text-decoration: none;\r\n    z-index: 3;\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    position: relative;\r\n    top: 0%;\r\n    z-index: 2;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport GridArea from \"../IndivPage/NewContainer\";\r\nimport Banner from \"../IndivPage/banner\";\r\nimport DestText from \"../IndivPage/destText\";\r\nimport Food from \"../IndivPage/Food\";\r\nimport Destinations from \"../IndivPage/destinations\";\r\nimport Iconic from \"../IndivPage/Iconic\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Kyoto = () => {\r\n  return (\r\n    <GridArea>\r\n      <Banner>\r\n        <img src=\"/photos-touse/Kyoto.png\" alt=\"hello\"></img>\r\n      </Banner>\r\n      <DestText>\r\n        <h2> Kyoto | Japan</h2>\r\n      </DestText>\r\n      <Food>\r\n        <Link to=\"/FoodList\" target=\"_blank\">\r\n          <img src=\"/photos-touse/sushi.png\" alt=\"Mochi \"></img>\r\n          <h1>Food</h1>\r\n        </Link>\r\n      </Food>\r\n\r\n      <Destinations>\r\n        <video\r\n          src=\"/video/waterfall.mp4\"\r\n          type=\"video/mp4\"\r\n          autoPlay\r\n          loop\r\n          muted\r\n        ></video>\r\n      </Destinations>\r\n      <Iconic>\r\n        <Link to=\"/IconicDestinations\" target=\"_blank\">\r\n          <h1>Destinations</h1>\r\n          <img src=\"/photos-touse/Castle.png\" alt=\"Image failed to load\"></img>\r\n        </Link>\r\n      </Iconic>\r\n    </GridArea>\r\n  );\r\n};\r\n\r\nexport default Kyoto;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.section`\r\n  width: 70vw;\r\n  margin: 0 auto;\r\n  padding: 2rem 0;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-column-gap: 1.5rem;\r\n  }\r\n  @media screen and (min-width: 992px) {\r\n    width: 85vw;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media screen and (min-width: 1140px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.article`\r\n  background: grey;\r\n  border-radius: 0.8rem;\r\n  margin: 1rem 0;\r\n\r\n  img {\r\n    width: 100%;\r\n    border-top-left-radius: 0.8rem;\r\n    border-top-right-radius: 0.8rem;\r\n    display: block;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  position: relative;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  padding: 1rem 0.5rem;\r\n\r\n  h3 {\r\n    text-transform: uppercase;\r\n    color: green;\r\n  }\r\n  h4 {\r\n    text-transform: capitalize;\r\n    color: black;\r\n    margin: 0.2rem 0 0.6rem 0;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Tour from \"../Foodstyles/articleStyle\";\r\nimport ImgContain from \"../Foodstyles/imgContainer\";\r\nimport TextDetails from \"../Foodstyles/TextDetail\";\r\n\r\nexport default class DataOutput extends Component {\r\n  state = {};\r\n  render() {\r\n    const { city, img, name, info } = this.props.item;\r\n    return (\r\n      <Tour>\r\n        <ImgContain>\r\n          <img src={img} alt=\"failed to load\"></img>\r\n        </ImgContain>\r\n        <TextDetails>\r\n          <h3>{city}</h3>\r\n          <h4>{name}</h4>\r\n          <h4>{info}</h4>\r\n        </TextDetails>\r\n      </Tour>\r\n    );\r\n  }\r\n}\r\n","const KyotoFood = [\r\n  {\r\n    id: 1,\r\n    city: \"Kyoto\",\r\n    img: \"/photos-touse/sushi.png\",\r\n    name: \"Sushi Platter\",\r\n    info: \"Japanese assortment of raw fish\"\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Kyoto\",\r\n    img: \"/photos-touse/mochi.png\",\r\n    name: \"Fruit Mochi\",\r\n    info: \"Japanese rice balls that come with fruit\"\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Kyoto\",\r\n    img:\r\n      \"https://images.pexels.com/photos/2262566/pexels-photo-2262566.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n    name: \"Matcha Ice Cream\",\r\n    info:\r\n      \"Japanese green tea ice cream made from matcha powder, a  form of green tea\"\r\n  }\r\n];\r\n\r\nexport default KyotoFood;\r\n","import React, { Component } from \"react\";\r\nimport SectionStyle from \"../Foodstyles/ListStyle\";\r\nimport DataOutput from \"./DataOutput\";\r\nimport FoodData from \"../foodData/KyotoFood\";\r\n\r\nexport default class Foodlist extends Component {\r\n  state = {\r\n    info: FoodData\r\n  };\r\n  render() {\r\n    const { info } = this.state;\r\n    return (\r\n      <SectionStyle>\r\n        {info.map(item => {\r\n          return <DataOutput key={item.id} item={item} />;\r\n        })}\r\n      </SectionStyle>\r\n    );\r\n  }\r\n}\r\n","const views = [\r\n  {\r\n    id: 1,\r\n    city: \"Kyoto\",\r\n    img: \"/photos-touse/Castle.png\",\r\n    name: \"kiyomizu dera\",\r\n    info: \"A buddhist temple that resembles a wooden fortress\"\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Kyoto\",\r\n    img: \"/photos-touse/rocks.png\",\r\n    name: \"Kodaji temple\",\r\n    info: \"An iconic temple know for the rows of neatly placed pebbles\"\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Kyoto\",\r\n    img: \"/photos-touse/golden.png\",\r\n    name: \"Kinkakuji\",\r\n    info: \"Known as the golden temple\"\r\n  }\r\n];\r\n\r\nexport default views;\r\n","import React, { Component } from \"react\";\r\nimport SectionStyle from \"../Foodstyles/ListStyle\";\r\nimport DataOutput from \"./DataOutput\";\r\n\r\nimport siteData from \"../clickRedirect/siteSeeing\";\r\n\r\nexport default class IconicDestinations extends Component {\r\n  state = {\r\n    info: siteData\r\n  };\r\n  render() {\r\n    const { info } = this.state;\r\n    return (\r\n      <SectionStyle>\r\n        {info.map(item => {\r\n          return <DataOutput key={item.id} item={item} />;\r\n        })}\r\n      </SectionStyle>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport GridArea from \"../IndivPage/NewContainer\";\r\nimport Banner from \"../IndivPage/banner\";\r\nimport DestText from \"../IndivPage/destText\";\r\nimport Food from \"../IndivPage/Food\";\r\nimport Destinations from \"../IndivPage/destinations\";\r\nimport Iconic from \"../IndivPage/Iconic\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Osaka = () => {\r\n  return (\r\n    <GridArea>\r\n      <Banner>\r\n        <img\r\n          src=\"https://images.pexels.com/photos/2070028/pexels-photo-2070028.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          alt=\"hello\"\r\n        ></img>\r\n      </Banner>\r\n      <DestText>\r\n        <h2> Osaka</h2>\r\n      </DestText>\r\n      <Food>\r\n        <Link to=\"/OsakaFoodList\" target=\"_blank\">\r\n          <h1>Food</h1>\r\n          <img src=\"/photos-touse/souffle.png\" alt=\"Mochi \"></img>\r\n        </Link>\r\n      </Food>\r\n\r\n      <Destinations>\r\n        <video\r\n          src=\"/video/Kyoto-city.mp4\"\r\n          type=\"video/mp4\"\r\n          autoPlay\r\n          loop\r\n          muted\r\n        ></video>\r\n      </Destinations>\r\n      <Iconic>\r\n        <Link to=\"/OsakaDestinations\" target=\"_blank\">\r\n          <h1>Destinations</h1>\r\n          <img src=\"/photos-touse/river.png\" alt=\"Image failed to load\"></img>\r\n        </Link>\r\n      </Iconic>\r\n    </GridArea>\r\n  );\r\n};\r\n\r\nexport default Osaka;\r\n","const yum = [\r\n  {\r\n    id: 1,\r\n    city: \"Osaka\",\r\n    img:\r\n      \"https://www.whats4eats.com/files/breads-okonomiyaki-wikimedia-ZhengZhou-4x3.jpg\",\r\n    name: \"okonomiyaki\",\r\n    info: \"Japanese Pancake, filled with savory proteins\"\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Osaka\",\r\n    img:\r\n      \"https://d3eh3svpl1busq.cloudfront.net/KQYMGOLIdXGmoAcyJsPOrQDKktgCbwtG/assets/static/optimized/rev-c1a3fa3/wp-content/uploads/2013/10/Takoyaki-NEW-II.jpg\",\r\n    name: \"Takoyaki\",\r\n    info: \"Octopus batter balls\"\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Osaka\",\r\n    img: \"/photos-touse/souffle.png\",\r\n    name: \"Souffle\",\r\n    info: \"Japanese style souffle\"\r\n  }\r\n];\r\n\r\nexport default yum;\r\n","import React, { Component } from \"react\";\r\nimport SectionStyle from \"../Foodstyles/ListStyle\";\r\nimport DataOutput from \"./DataOutput\";\r\nimport FoodData from \"../foodData/Osakafood\";\r\n\r\nexport default class Foodlist extends Component {\r\n  state = {\r\n    info: FoodData\r\n  };\r\n  render() {\r\n    const { info } = this.state;\r\n    return (\r\n      <SectionStyle>\r\n        {info.map(item => {\r\n          return <DataOutput key={item.id} item={item} />;\r\n        })}\r\n      </SectionStyle>\r\n    );\r\n  }\r\n}\r\n","const yotheviews = [\r\n  {\r\n    id: 1,\r\n    city: \"Osaka\",\r\n    img: \"/photos-touse/deer.png\",\r\n    name: \"Nara Forest\",\r\n    info: \"Know for the dear that wander the forest\"\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Osaka\",\r\n    img: \"/photos-touse/kitchen.png\",\r\n    name: \"Dotobori\",\r\n    info: \"Reknowned as Japan's kitchen due to the vast amount of restaurants\"\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Osaka\",\r\n    img: \"/photos-touse/sunset.png\",\r\n    name: \"Minoo Park\",\r\n    info: \"A hiking path where you can walk through waterfalls and enjoy nature\"\r\n  }\r\n];\r\n\r\nexport default yotheviews;\r\n","import React, { Component } from \"react\";\r\nimport SectionStyle from \"../Foodstyles/ListStyle\";\r\nimport DataOutput from \"../clickRedirect/DataOutput\";\r\nimport Yotheviews from \"../SiteViews/OsakaDest\";\r\n\r\nexport default class OsakaViews extends Component {\r\n  state = {\r\n    info: Yotheviews\r\n  };\r\n  render() {\r\n    const { info } = this.state;\r\n    return (\r\n      <SectionStyle>\r\n        {info.map(item => {\r\n          return <DataOutput key={item.id} item={item} />;\r\n        })}\r\n      </SectionStyle>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport GridArea from \"../IndivPage/NewContainer\";\r\nimport Banner from \"../IndivPage/banner\";\r\nimport DestText from \"../IndivPage/destText\";\r\nimport Food from \"../IndivPage/Food\";\r\nimport Destinations from \"../IndivPage/destinations\";\r\nimport Iconic from \"../IndivPage/Iconic\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Jeju = () => {\r\n  return (\r\n    <GridArea>\r\n      <Banner>\r\n        <img src=\"/photos-touse/Beach.png\" alt=\"hello\"></img>\r\n      </Banner>\r\n      <DestText>\r\n        <h2> Jeju-do | South Korea</h2>\r\n      </DestText>\r\n      <Food>\r\n        <Link to=\"/JejuFoodList\" target=\"_blank\">\r\n          <h1>Food</h1>\r\n          <img src=\"/photos-touse/cafe.png\" alt=\"Mochi \"></img>\r\n        </Link>\r\n      </Food>\r\n\r\n      <Destinations>\r\n        <video\r\n          src=\"/video/Jeju.MOV\"\r\n          type=\"video/mp4\"\r\n          autoPlay\r\n          loop\r\n          muted\r\n        ></video>\r\n      </Destinations>\r\n      <Iconic>\r\n        <Link to=\"/JejuDestinations\" target=\"_blank\">\r\n          <h1>Destinations</h1>\r\n          <img\r\n            src=\"/photos-touse/cover-photo.png\"\r\n            alt=\"Image failed to load\"\r\n          ></img>\r\n        </Link>\r\n      </Iconic>\r\n    </GridArea>\r\n  );\r\n};\r\n\r\nexport default Jeju;\r\n","const KoreanDanks = [\r\n  {\r\n    id: 1,\r\n    city: \"Jeju\",\r\n    img:\r\n      \"https://images.pexels.com/photos/2233730/pexels-photo-2233730.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n    name: \"Black Pork\",\r\n    info: \"Noteable for Korean BBQ\"\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Jeju\",\r\n    img:\r\n      \"https://images.pexels.com/photos/2888679/pexels-photo-2888679.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n    name: \"Seafood Hot Pot\",\r\n    info: \"Local seafood cooked in a stew\"\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Jeju\",\r\n    img:\r\n      \"https://images.pexels.com/photos/1123250/pexels-photo-1123250.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n    name: \"Fried Chicken\",\r\n    info:\r\n      \"Also known as KFC, famous for flavors such as garlic soy sauce, or honey and butter.\"\r\n  }\r\n];\r\n\r\nexport default KoreanDanks;\r\n","import React, { Component } from \"react\";\r\nimport SectionStyle from \"../Foodstyles/ListStyle\";\r\nimport DataOutput from \"./DataOutput\";\r\n\r\nimport siteData from \"../foodData/JejuFood\";\r\n\r\nexport default class JejuList extends Component {\r\n  state = {\r\n    info: siteData\r\n  };\r\n  render() {\r\n    const { info } = this.state;\r\n    return (\r\n      <SectionStyle>\r\n        {info.map(item => {\r\n          return <DataOutput key={item.id} item={item} />;\r\n        })}\r\n      </SectionStyle>\r\n    );\r\n  }\r\n}\r\n","const Koreanviews = [\r\n  {\r\n    id: 1,\r\n    city: \"Jeju-do\",\r\n    img: \"/photos-touse/cover-photo.png\",\r\n    name: \"Seogwipo-si\",\r\n    info:\r\n      \"Located on the southern end of the island, known for botanical gardens other themed gardens\"\r\n  },\r\n  {\r\n    id: 2,\r\n    city: \"Jeju-do\",\r\n    img: \"/photos-touse/pretty.png\",\r\n    name: \"Hamdeok\",\r\n    info:\r\n      \"Located on the northern side of the island with restaurants on the beach and local markets\"\r\n  },\r\n  {\r\n    id: 3,\r\n    city: \"Jeju-do\",\r\n    img:\r\n      \"https://lh3.googleusercontent.com/p/AF1QipMo8Dbvo_9QZ00vw5N3ZFZ-IogkbGh-wsmaaMIs=w660-h440-c\",\r\n    name: \"Seongsan Ilchulbong\",\r\n    info:\r\n      \"Known as the peak of Jeju where there is a plataeu you can see the whole island\"\r\n  }\r\n];\r\n\r\nexport default Koreanviews;\r\n","import React, { Component } from \"react\";\r\nimport SectionStyle from \"../Foodstyles/ListStyle\";\r\nimport DataOutput from \"../clickRedirect/DataOutput\";\r\n\r\nimport siteData from \"../SiteViews/Jejuview\";\r\n\r\nexport default class JejuViews extends Component {\r\n  state = {\r\n    info: siteData\r\n  };\r\n  render() {\r\n    const { info } = this.state;\r\n    return (\r\n      <SectionStyle>\r\n        {info.map(item => {\r\n          return <DataOutput key={item.id} item={item} />;\r\n        })}\r\n      </SectionStyle>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Nav from \"./components/navigationList\";\nimport LandingPage from \"./LandingPage\";\nimport Kyoto from \"./loadPages/Kyoto\";\nimport FoodList from \"../src/clickRedirect/FoodList\";\nimport IconicDestinations from \"../src/clickRedirect/IconicDestination\";\n\nimport Osaka from \"../src/loadPages/Osaka\";\nimport OsakaList from \"../src/clickRedirect/OsakaFood\";\nimport OsakaViews from \"../src/SiteViews/OsakaViews\";\n\nimport Jeju from \"../src/loadPages/Jeju\";\nimport JejuList from \"../src/clickRedirect/JejuFood\";\nimport JejuViews from \"../src/SiteViews/JejuDests\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav></Nav>\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/Kyoto\" component={Kyoto} />\n          <Route path=\"/FoodList\" exact component={FoodList} />\n          <Route\n            path=\"/IconicDestinations\"\n            exact\n            component={IconicDestinations}\n          />\n\n          <Route path=\"/Osaka\" component={Osaka} />\n          <Route path=\"/OsakaFoodList\" exact component={OsakaList} />\n          <Route path=\"/OsakaDestinations\" exact component={OsakaViews} />\n\n          <Route path=\"/Jeju\" component={Jeju} />\n          <Route path=\"/JejuFoodList\" exact component={JejuList} />\n          <Route path=\"/JejuDestinations\" exact component={JejuViews} />\n        </Switch>\n\n        {/* <FoodList></FoodList> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}